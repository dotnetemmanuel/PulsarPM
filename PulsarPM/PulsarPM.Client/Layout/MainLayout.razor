@using PulsarPM.Client.Services
@inherits LayoutComponentBase
@inject ProjectStateService ProjectStateService

<div class="page">
  <div>
    <NavMenu/>
  </div>
  @* Required *@
  <MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>

  <MudPopoverProvider/>

  @* Needed for dialogs *@
  <MudDialogProvider/>

  @* Needed for snackbars *@
  <MudSnackbarProvider/>
  <main>
    <div class="top-row px-4" style="@(_isDarkMode? "background-color: #373740" : "")">
      <MudSwitch @bind-Value="_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool">
        @if (_isDarkMode)
        {
          <MudIcon Icon="@Icons.Material.Rounded.DarkMode"/>
        }
        else
        {
          <MudIcon Icon="@Icons.Material.Rounded.LightMode" Color="Color.Warning" />
        }
      </MudSwitch>
      <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
    </div>

    <article class="content px-4">
      @Body
    </article>
  </main>
</div>

<div id="blazor-error-ui">
  An unhandled error has occurred.
  <a href="" class="reload">Reload</a>
  <a class="dismiss">🗙</a>
</div>

@code {
  private MudTheme _theme = new();
  private bool _isDarkMode = true;

  protected override void OnInitialized()
  {

    ProjectStateService.OnProjectAdded += HandleProjectAdded;
    Console.WriteLine("MainLayout subscribed to OnProjectAdded event");
  }

  private async Task HandleProjectAdded()
  {
    Console.WriteLine("MainLayout: Project added, triggering full StateHasChanged");
    StateHasChanged();
  }

  public void Dispose()
  {
    ProjectStateService.OnProjectAdded -= HandleProjectAdded;
  }
}