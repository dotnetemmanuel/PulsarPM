@using PulsarPM.Client.Services
@inherits LayoutComponentBase
@inject ProjectStateService ProjectStateService

@* Width="@(_open ? "auto" : "")" Height="@(_open ? "auto" : "")" *@
<div class="page">
  <!-- Drawer Container -->
  <MudDrawerContainer style="background-color: #373740">
    <!-- Navigation Drawer -->
    <MudDrawer Open="_open" style="overflow: visible; " Elevation="1">
      <NavMenu/>
    </MudDrawer>

    <!-- AppBar to toggle the Drawer -->
    <MudAppBar Elevation="1">
      <MudIconButton Icon="@Icons.Material.Filled.Menu" OnClick="ToggleDrawer"/>
      <MudSpacer/>
      @* <MudSwitch @bind-Value="_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool"> *@
      @*   @if (_isDarkMode) *@
      @*   { *@
      @*     <MudIcon Icon="@Icons.Material.Rounded.DarkMode" /> *@
      @*   } *@
      @*   else *@
      @*   { *@
      @*     <MudIcon Icon="@Icons.Material.Rounded.LightMode" Color="Color.Warning" /> *@
      @*   } *@
      @* </MudSwitch> *@
      @* <MudImage Src="images/pulsarpm.png" Width="40"></MudImage> *@
      @* <MudImage Src="images/pulsarpm_black.png" Width="40"></MudImage> *@
      @if (_randomColor == 1)
      {
        <MudImage Src="images/pulsarpm_blue.png" Width="40"></MudImage>
      }
      else if (_randomColor == 2)
      {
        <MudImage Src="images/pulsarpm_green.png" Width="40"></MudImage>
      }
      else if (_randomColor == 3)
      {
        <MudImage Src="images/pulsarpm_orange.png" Width="40"></MudImage>

      }
      else if (_randomColor == 4)
      {
        <MudImage Src="images/pulsarpm_pink.png" Width="40"></MudImage>

      }
      else if (_randomColor == 5)
      {
        <MudImage Src="images/pulsarpm_purple.png" Width="40"></MudImage>

      }
      else if (_randomColor == 6)
      {
        <MudImage Src="images/pulsarpm_yellow.png" Width="40"></MudImage>
      }

    </MudAppBar>

    <!-- Main Content -->
    <MudMainContent>
      <article class="content px-4" style="background-color:@(_isDarkMode ? "#32333d" : "white");">
        @Body
      </article>
    </MudMainContent>
  </MudDrawerContainer>

  <!-- Required Providers -->
  <MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>
  <MudPopoverProvider/>
  <MudDialogProvider/>
  <MudSnackbarProvider/>
</div>

@* <div class="page"> *@
@*   $1$ @if (_isNavMenuVisible) #1# *@
@*   $1$ { #1# *@
@*   $1$ $2$ <div style="margin-top: 64px;"> #2# #1# *@
@*   $1$ $2$   <NavMenu /> #2# #1# *@
@*   $1$ $2$ </div> #2# #1# *@
@*   $1$     } #1# *@
@*   $1$ Required #1# *@
@*   <MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/> *@
@* *@
@*   <MudPopoverProvider/> *@
@* *@
@*   $1$ Needed for dialogs #1# *@
@*   <MudDialogProvider/> *@
@* *@
@*   $1$ Needed for snackbars #1# *@
@*   <MudSnackbarProvider/> *@
@*   <main> *@
@*     <div class="top-row px-4" style="@(_isDarkMode ? "background-color: #373740" : "")"> *@
@*       <MudAppBar Color="Color.Dark" Fixed="true"> *@
@*         <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="ToggleDrawer"/> *@
@*         <MudSpacer/> *@
@*         <MudSwitch @bind-Value="_isDarkMode" Color="Color.Primary" Class="ma-4" T="bool"> *@
@*           @if (_isDarkMode) *@
@*           { *@
@*             <MudIcon Icon="@Icons.Material.Rounded.DarkMode"/> *@
@*           } *@
@*           else *@
@*           { *@
@*             <MudIcon Icon="@Icons.Material.Rounded.LightMode" Color="Color.Warning"/> *@
@*           } *@
@*         </MudSwitch> *@
@*         <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit"/> *@
@*       </MudAppBar> *@
@*       @if (_open) *@
@*       { *@
@*       <MudDrawer @bind-Open="_open" Elevation="1"> *@
@*         <MudDrawerHeader> *@
@*           <MudText Typo="Typo.h6">My App</MudText> *@
@*         </MudDrawerHeader> *@
@*         <MudNavMenu> *@
@*           <MudNavLink Match="NavLinkMatch.All">Store</MudNavLink> *@
@*           <MudNavLink Match="NavLinkMatch.All">Library</MudNavLink> *@
@*           <MudNavLink Match="NavLinkMatch.All">Community</MudNavLink> *@
@*         </MudNavMenu>      </MudDrawer> *@
@*       } *@
@* *@
@*     </div> *@
@* *@
@*     <article class="content px-4"> *@
@*       @Body *@
@*     </article> *@
@*   </main> *@
@* </div> *@

<div id="blazor-error-ui">
  An unhandled error has occurred.
  <a href="" class="reload">Reload</a>
  <a class="dismiss">🗙</a>
</div>

@code {

  private bool _open = false;

  private void ToggleDrawer()
  {
    _open = !_open;
  }
  private MudTheme _theme = new();
  private bool _isDarkMode = true;
  private bool _isNavMenuVisible;
  private Random random = new Random();
  private int _randomColor;

  protected override void OnInitialized()
  {
    ProjectStateService.OnProjectAdded += HandleProjectAdded;
    Console.WriteLine("MainLayout subscribed to OnProjectAdded event");
    _randomColor = random.Next(1, 7);
  }

  private async Task HandleProjectAdded()
  {
    Console.WriteLine("MainLayout: Project added, triggering full StateHasChanged");
    StateHasChanged();
  }

  public void Dispose()
  {
    ProjectStateService.OnProjectAdded -= HandleProjectAdded;
  }

}